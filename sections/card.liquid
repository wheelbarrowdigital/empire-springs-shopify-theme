<!-- Product Card Component -->
<!-- This section is used as a reusable product card component across the theme -->

{% comment %}
  Usage:
  {% render 'card', product: product, show_quick_add: true, show_vendor: false %}
  
  Parameters:
  - product: The product object to display
  - show_quick_add: Boolean to show/hide quick add button
  - show_vendor: Boolean to show/hide vendor name
  - show_color_swatches: Boolean to show/hide color swatches
  - show_secondary_image: Boolean to show secondary image on hover
{% endcomment %}

<div class="group product-card relative" data-product-id="{{ product.id }}">
  <a href="{{ product.url }}" class="block">
    <!-- Product Image -->
    <div class="relative overflow-hidden bg-zinc-100 aspect-square mb-4">
      {% if product.featured_image %}
        <img
          src="{{ product.featured_image | image_url: width: 600, height: 600 }}"
          alt="{{ product.title | escape }}"
          class="product-image-primary w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
          loading="lazy"
          width="600"
          height="600"
        >
        
        <!-- Secondary Image on Hover -->
        {% if show_secondary_image and product.images.size > 1 %}
          <img
            src="{{ product.images[1] | image_url: width: 600, height: 600 }}"
            alt="{{ product.title | escape }}"
            class="product-image-secondary absolute inset-0 w-full h-full object-cover opacity-0 group-hover:opacity-100 transition-opacity duration-500"
            loading="lazy"
            width="600"
            height="600"
          >
        {% endif %}
      {% else %}
        <div class="w-full h-full flex items-center justify-center">
          <span class="text-zinc-500 uppercase tracking-widest text-sm">No Image</span>
        </div>
      {% endif %}

      <!-- Badges -->
      {% if product.available == false %}
        <div class="absolute top-4 left-4 bg-black text-white px-3 py-1 text-xs uppercase tracking-wider z-10">
          Sold Out
        </div>
      {% elsif product.compare_at_price > product.price %}
        {% assign discount = product.compare_at_price | minus: product.price | times: 100 | divided_by: product.compare_at_price | round %}
        <div class="absolute top-4 left-4 bg-red-600 text-white px-3 py-1 text-xs uppercase tracking-wider z-10">
          {{ discount }}% Off
        </div>
      {% elsif product.metafields.custom.new_arrival %}
        <div class="absolute top-4 left-4 bg-green-600 text-white px-3 py-1 text-xs uppercase tracking-wider z-10">
          New
        </div>
      {% endif %}

      <!-- Quick View Button (Overlay) -->
      {% if section.settings.enable_quick_view %}
        <div class="absolute inset-0 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity bg-black/20 z-20">
          <button
            type="button"
            class="quick-view-btn bg-white text-black px-4 py-2 uppercase text-sm tracking-wider hover:bg-zinc-100 transition-colors"
            data-product-handle="{{ product.handle }}"
            onclick="openQuickView('{{ product.handle }}')"
          >
            Quick View
          </button>
        </div>
      {% endif %}
    </div>

    <!-- Product Info -->
    <div class="product-info">
      {% if show_vendor and product.vendor %}
        <p class="text-xs uppercase tracking-wider text-zinc-500 mb-1">{{ product.vendor }}</p>
      {% endif %}

      <h3 class="text-base font-bold uppercase tracking-wide mb-2 product-title">{{ product.title }}</h3>

      <div class="flex items-center gap-2 mb-2">
        {% if product.compare_at_price > product.price %}
          <span class="text-zinc-400 line-through text-sm">{{ product.compare_at_price | money }}</span>
          <span class="text-red-600 font-bold">{{ product.price | money }}</span>
        {% else %}
          <span class="text-zinc-700">{{ product.price | money }}</span>
        {% endif %}
      </div>

      <!-- Color Swatches -->
      {% if show_color_swatches %}
        {% assign colors = product.options_with_values | where: 'name', 'Color' | first %}
        {% if colors %}
          <div class="flex gap-1 mt-2">
            {% for value in colors.values limit: 5 %}
              <span
                class="w-5 h-5 rounded-full border border-zinc-300 color-swatch"
                style="background-color: {{ value | handleize | replace: '-', '' }};"
                title="{{ value }}"
                data-color="{{ value }}"
              ></span>
            {% endfor %}
            {% if colors.values.size > 5 %}
              <span class="text-xs text-zinc-500 flex items-center">+{{ colors.values.size | minus: 5 }}</span>
            {% endif %}
          </div>
        {% endif %}
      {% endif %}
    </div>
  </a>

  <!-- Quick Add to Cart -->
  {% if show_quick_add and product.available %}
    <div class="quick-add-container mt-3">
      {% if product.has_only_default_variant %}
        <form action="{{ routes.cart_add_url }}" method="post" class="quick-add-form">
          <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
          <input type="hidden" name="quantity" value="1">
          <button
            type="submit"
            class="quick-add-btn w-full bg-black text-white py-2 px-4 uppercase tracking-wider text-sm hover:bg-zinc-800 transition-colors"
          >
            Add to Cart
          </button>
        </form>
      {% else %}
        <button
          type="button"
          class="select-options-btn w-full bg-zinc-200 text-black py-2 px-4 uppercase tracking-wider text-sm hover:bg-zinc-300 transition-colors"
          onclick="window.location.href='{{ product.url }}'"
        >
          Select Options
        </button>
      {% endif %}
    </div>
  {% endif %}
</div>

<!-- Quick View Modal Template -->
{% if section.settings.enable_quick_view %}
  <template id="quick-view-modal-template">
    <div class="fixed inset-0 bg-black/50 z-50 flex items-center justify-center p-4" id="quick-view-modal">
      <div class="bg-white max-w-4xl w-full max-h-[90vh] overflow-y-auto relative">
        <button 
          type="button"
          class="absolute top-4 right-4 z-10 text-zinc-600 hover:text-black"
          onclick="closeQuickView()"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8 p-8">
          <!-- Quick View Image -->
          <div class="quick-view-image">
            <img src="" alt="" class="w-full h-full object-cover">
          </div>
          
          <!-- Quick View Info -->
          <div class="quick-view-info">
            <h2 class="text-2xl font-bold uppercase tracking-tight mb-4"></h2>
            <div class="price mb-4"></div>
            <div class="description mb-6"></div>
            
            <form action="{{ routes.cart_add_url }}" method="post" class="quick-view-form">
              <div class="variants mb-4"></div>
              <div class="quantity-selector mb-4">
                <label class="block text-sm font-bold uppercase tracking-wider mb-2">Quantity</label>
                <div class="flex items-center border-2 border-zinc-300 w-fit">
                  <button type="button" class="px-3 py-1 hover:bg-zinc-100" onclick="this.nextElementSibling.stepDown()">-</button>
                  <input type="number" name="quantity" min="1" value="1" class="w-16 text-center border-0 focus:outline-none">
                  <button type="button" class="px-3 py-1 hover:bg-zinc-100" onclick="this.previousElementSibling.stepUp()">+</button>
                </div>
              </div>
              <button type="submit" class="w-full bg-black text-white py-3 px-6 uppercase tracking-wider font-bold hover:bg-zinc-800 transition-colors">
                Add to Cart
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </template>
{% endif %}

<script>
  // Quick View functionality
  function openQuickView(handle) {
    // Fetch product data via AJAX
    fetch(`/products/${handle}.js`)
      .then(response => response.json())
      .then(product => {
        // Create modal from template
        const template = document.getElementById('quick-view-modal-template');
        if (template) {
          const modal = template.content.cloneNode(true);
          
          // Populate modal with product data
          modal.querySelector('.quick-view-image img').src = product.featured_image;
          modal.querySelector('.quick-view-image img').alt = product.title;
          modal.querySelector('.quick-view-info h2').textContent = product.title;
          modal.querySelector('.quick-view-info .price').innerHTML = formatMoney(product.price);
          modal.querySelector('.quick-view-info .description').innerHTML = product.description;
          
          // Add variant selector if needed
          if (product.variants.length > 1) {
            const variantsContainer = modal.querySelector('.variants');
            const select = document.createElement('select');
            select.name = 'id';
            select.className = 'w-full p-2 border border-zinc-300 mb-4';
            
            product.variants.forEach(variant => {
              const option = document.createElement('option');
              option.value = variant.id;
              option.textContent = variant.title + ' - ' + formatMoney(variant.price);
              option.disabled = !variant.available;
              select.appendChild(option);
            });
            
            variantsContainer.appendChild(select);
          } else {
            const input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'id';
            input.value = product.variants[0].id;
            modal.querySelector('.quick-view-form').appendChild(input);
          }
          
          // Append modal to body
          document.body.appendChild(modal);
        }
      })
      .catch(error => {
        console.error('Error loading product:', error);
      });
  }
  
  function closeQuickView() {
    const modal = document.getElementById('quick-view-modal');
    if (modal) {
      modal.remove();
    }
  }
  
  function formatMoney(cents) {
    return '$' + (cents / 100).toFixed(2);
  }

  // AJAX Add to Cart
  document.addEventListener('DOMContentLoaded', function() {
    // Handle quick add forms
    document.querySelectorAll('.quick-add-form').forEach(form => {
      form.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);
        const button = this.querySelector('button[type="submit"]');
        const originalText = button.textContent;
        
        // Update button state
        button.textContent = 'Adding...';
        button.disabled = true;
        
        fetch(this.action, {
          method: 'POST',
          body: formData
        })
        .then(response => response.json())
        .then(data => {
          // Update cart count in header if it exists
          const cartCount = document.querySelector('.cart-count');
          if (cartCount) {
            fetch('/cart.js')
              .then(res => res.json())
              .then(cart => {
                cartCount.textContent = cart.item_count;
              });
          }
          
          // Show success message
          button.textContent = 'Added!';
          button.classList.add('bg-green-600');
          
          setTimeout(() => {
            button.textContent = originalText;
            button.disabled = false;
            button.classList.remove('bg-green-600');
          }, 2000);
        })
        .catch(error => {
          console.error('Error adding to cart:', error);
          button.textContent = 'Error';
          button.classList.add('bg-red-600');
          
          setTimeout(() => {
            button.textContent = originalText;
            button.disabled = false;
            button.classList.remove('bg-red-600');
          }, 2000);
        });
      });
    });
  });
</script>

<style>
  /* Product card hover effects */
  .product-card {
    transition: transform 0.3s ease;
  }
  
  .product-card:hover {
    transform: translateY(-2px);
  }
  
  /* Color swatch styles */
  .color-swatch {
    position: relative;
    cursor: pointer;
  }
  
  .color-swatch::after {
    content: '';
    position: absolute;
    inset: -2px;
    border: 2px solid transparent;
    border-radius: 50%;
    transition: border-color 0.2s;
  }
  
  .color-swatch:hover::after {
    border-color: #000;
  }
  
  /* Quick view modal animations */
  #quick-view-modal {
    animation: fadeIn 0.3s ease;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  
  /* Loading state for buttons */
  .loading {
    position: relative;
    color: transparent;
  }
  
  .loading::after {
    content: '';
    position: absolute;
    width: 16px;
    height: 16px;
    top: 50%;
    left: 50%;
    margin-left: -8px;
    margin-top: -8px;
    border: 2px solid #fff;
    border-radius: 50%;
    border-top-color: transparent;
    animation: spin 0.6s linear infinite;
  }
  
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
</style>

{% schema %}
{
  "name": "Product Card",
  "tag": "div",
  "class": "product-card-section",
  "settings": [
    {
      "type": "header",
      "content": "Card Display Options"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "label": "Show Vendor",
      "default": false,
      "info": "Display product vendor/brand name"
    },
    {
      "type": "checkbox",
      "id": "show_color_swatches",
      "label": "Show Color Swatches",
      "default": true,
      "info": "Display available color options as swatches"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "label": "Show Secondary Image on Hover",
      "default": true,
      "info": "Display second product image when hovering"
    },
    {
      "type": "checkbox",
      "id": "enable_quick_view",
      "label": "Enable Quick View",
      "default": false,
      "info": "Allow customers to view product details in a modal"
    },
    {
      "type": "checkbox",
      "id": "enable_quick_add",
      "label": "Enable Quick Add to Cart",
      "default": true,
      "info": "Show 'Add to Cart' button on product cards"
    },
    {
      "type": "header",
      "content": "Badge Settings"
    },
    {
      "type": "checkbox",
      "id": "show_sale_badge",
      "label": "Show Sale Badge",
      "default": true,
      "info": "Display discount percentage on sale items"
    },
    {
      "type": "checkbox",
      "id": "show_sold_out_badge",
      "label": "Show Sold Out Badge",
      "default": true,
      "info": "Display 'Sold Out' label on unavailable products"
    },
    {
      "type": "checkbox",
      "id": "show_new_badge",
      "label": "Show New Badge",
      "default": true,
      "info": "Display 'New' label on recent products"
    }
  ],
  "presets": [
    {
      "name": "Product Card",
      "category": "Product"
    }
  ]
}
{% endschema %}